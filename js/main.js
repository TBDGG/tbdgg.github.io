// –î–∞–Ω–Ω—ã–µ —É–∫—Ä–∞—à–µ–Ω–∏–π –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞
const decorations = [
    { id: 1, name: "–ó–≤–µ–∑–¥–∞", icon: "‚≠ê", price: 50 },
    { id: 2, name: "–õ—É–Ω–∞", icon: "üåô", price: 75 },
    { id: 3, name: "–ö–æ–º–µ—Ç–∞", icon: "‚òÑÔ∏è", price: 100 },
    { id: 4, name: "–ü–ª–∞–Ω–µ—Ç–∞", icon: "ü™ê", price: 150 },
    { id: 5, name: "–ù–õ–û", icon: "üõ∏", price: 200 },
    { id: 6, name: "–†–∞–∫–µ—Ç–∞", icon: "üöÄ", price: 120 },
    { id: 7, name: "–°–ø—É—Ç–Ω–∏–∫", icon: "üõ∞Ô∏è", price: 80 },
    { id: 8, name: "–ê—Å—Ç–µ—Ä–æ–∏–¥", icon: "üå†", price: 60 },
    { id: 9, name: "–ì–∞–ª–∞–∫—Ç–∏–∫–∞", icon: "üåå", price: 300 },
    { id: 10, name: "–°–æ–∑–≤–µ–∑–¥–∏–µ", icon: "üî≠", price: 180 },
    { id: 11, name: "–ú–æ–ª–Ω–∏—è", icon: "‚ö°", price: 90 },
    { id: 12, name: "–û–≥–æ–Ω—å", icon: "üî•", price: 70 },
    { id: 13, name: "–í–æ–¥–∞", icon: "üíß", price: 65 },
    { id: 14, name: "–í–æ–∑–¥—É—Ö", icon: "üí®", price: 55 },
    { id: 15, name: "–ó–µ–º–ª—è", icon: "üåç", price: 85 },
    { id: 16, name: "–ö–æ–ª—å—Ü–æ", icon: "üí´", price: 110 },
    { id: 17, name: "–ö—Ä–∏—Å—Ç–∞–ª–ª", icon: "üîÆ", price: 160 },
    { id: 18, name: "–ö–ª—é—á", icon: "üîë", price: 95 },
    { id: 19, name: "–ó–∞–º–æÃÅ–∫", icon: "üîí", price: 45 },
    { id: 20, name: "–°–µ—Ä–¥—Ü–µ", icon: "üíñ", price: 130 },
    { id: 21, name: "–ú–µ–¥–∞–ª—å", icon: "üèÖ", price: 140 },
    { id: 22, name: "–ö—É–±–æ–∫", icon: "üèÜ", price: 250 },
    { id: 23, name: "–§–ª–∞–≥", icon: "üö©", price: 40 },
    { id: 24, name: "–Ø–∫–æ—Ä—å", icon: "‚öì", price: 75 },
    { id: 25, name: "–ß–∞—Å—ã", icon: "‚è∞", price: 65 },
    { id: 26, name: "–ó–æ–Ω—Ç", icon: "‚òÇÔ∏è", price: 50 },
    { id: 27, name: "–°–Ω–µ–∂–∏–Ω–∫–∞", icon: "‚ùÑÔ∏è", price: 35 },
    { id: 28, name: "–¶–≤–µ—Ç–æ–∫", icon: "üå∫", price: 45 },
    { id: 29, name: "–õ–∏—Å—Ç", icon: "üçÉ", price: 30 },
    { id: 30, name: "–†–∞–¥—É–≥–∞", icon: "üåà", price: 220 }
];

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function checkAuth() {
    const user = localStorage.getItem('currentUser');
    if (user) {
        const userData = JSON.parse(user);
        document.getElementById('userInfo').style.display = 'block';
        document.getElementById('guestSection').style.display = 'none';
        document.getElementById('userName').textContent = userData.username;
        document.getElementById('userCoins').textContent = userData.coins || 0;
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –º–∞–≥–∞–∑–∏–Ω –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
        loadShop();
    }
}

// –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
function logout() {
    localStorage.removeItem('currentUser');
    window.location.href = 'index.html';
}

// –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –∏–≥—Ä–∞–º
function scrollToGames() {
    document.getElementById('games').scrollIntoView({ 
        behavior: 'smooth' 
    });
}

// –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö
function showFeatureInfo() {
    const featureInfo = document.getElementById('featureInfo');
    featureInfo.style.display = featureInfo.style.display === 'none' ? 'grid' : 'none';
}

// –û—Ç–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–≥—Ä—ã
function openGame(gameSlug) {
    const user = localStorage.getItem('currentUser');
    if (!user) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É —á—Ç–æ–±—ã –∏–≥—Ä–∞—Ç—å!');
        window.location.href = 'login.html';
        return;
    }
    window.location.href = `games/${gameSlug}.html`;
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –º–∞–≥–∞–∑–∏–Ω–∞
function loadShop() {
    const decorationsGrid = document.getElementById('decorationsGrid');
    if (!decorationsGrid) return;

    decorationsGrid.innerHTML = decorations.map(decoration => `
        <div class="shop-item" onclick="buyDecoration(${decoration.id})">
            <div class="item-icon">${decoration.icon}</div>
            <h4>${decoration.name}</h4>
            <div class="item-price">${decoration.price} WCoins</div>
        </div>
    `).join('');
}

// –ü–æ–∫—É–ø–∫–∞ —Å–º–µ–Ω—ã –∞–≤–∞—Ç–∞—Ä–∞
function buyAvatarChange() {
    const user = JSON.parse(localStorage.getItem('currentUser'));
    if (!user) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É!');
        return;
    }

    const cost = 100;
    if (user.coins < cost) {
        alert('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ WCoins!');
        return;
    }

    const newAvatar = prompt('–í–≤–µ–¥–∏—Ç–µ URL –Ω–æ–≤–æ–≥–æ –∞–≤–∞—Ç–∞—Ä–∞:');
    if (newAvatar) {
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user.coins -= cost;
        user.avatar = newAvatar;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –≤ localStorage
        const users = JSON.parse(localStorage.getItem('users') || '[]');
        const userIndex = users.findIndex(u => u.id === user.id);
        if (userIndex !== -1) {
            users[userIndex] = user;
            localStorage.setItem('users', JSON.stringify(users));
            localStorage.setItem('currentUser', JSON.stringify(user));
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            document.getElementById('userCoins').textContent = user.coins;
            document.getElementById('userAvatar').src = user.avatar;
            
            alert('–ê–≤–∞—Ç–∞—Ä —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!');
        }
    }
}

// –ü–æ–∫—É–ø–∫–∞ —É–∫—Ä–∞—à–µ–Ω–∏—è
function buyDecoration(decorationId) {
    const user = JSON.parse(localStorage.getItem('currentUser'));
    if (!user) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É!');
        return;
    }

    const decoration = decorations.find(d => d.id === decorationId);
    if (!decoration) return;

    if (user.coins < decoration.price) {
        alert('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ WCoins!');
        return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —ç—Ç–æ —É–∫—Ä–∞—à–µ–Ω–∏–µ
    if (!user.decorations) user.decorations = [];
    
    if (user.decorations.includes(decorationId)) {
        alert('–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —ç—Ç–æ —É–∫—Ä–∞—à–µ–Ω–∏–µ!');
        return;
    }

    // –ü–æ–∫—É–ø–∫–∞
    user.coins -= decoration.price;
    user.decorations.push(decorationId);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤ localStorage
    const users = JSON.parse(localStorage.getItem('users') || '[]');
    const userIndex = users.findIndex(u => u.id === user.id);
    if (userIndex !== -1) {
        users[userIndex] = user;
        localStorage.setItem('users', JSON.stringify(users));
        localStorage.setItem('currentUser', JSON.stringify(user));
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        document.getElementById('userCoins').textContent = user.coins;
        alert(`–£–∫—Ä–∞—à–µ–Ω–∏–µ "${decoration.name}" —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–æ!`);
    }
}

// –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ WCoins –∑–∞ –∏–≥—Ä—É
function addCoins(amount, gameName) {
    const user = JSON.parse(localStorage.getItem('currentUser'));
    if (!user) return;

    user.coins = (user.coins || 0) + amount;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤ localStorage
    const users = JSON.parse(localStorage.getItem('users') || '[]');
    const userIndex = users.findIndex(u => u.id === user.id);
    if (userIndex !== -1) {
        users[userIndex] = user;
        localStorage.setItem('users', JSON.stringify(users));
        localStorage.setItem('currentUser', JSON.stringify(user));
        
        console.log(`–ù–∞—á–∏—Å–ª–µ–Ω–æ ${amount} WCoins –∑–∞ –∏–≥—Ä—É: ${gameName}`);
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    checkAuth();
});
